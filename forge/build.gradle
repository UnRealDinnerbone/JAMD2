plugins {
    id "com.github.johnrengelman.shadow" version "5.0.0"
    id "com.matthewprenger.cursegradle"
}

configurations {
    shadowCommon
}

architectury {
    platformSetupLoomIde()
    forge()
}

loom {
    useFabricMixin = true
}

dependencies {
    forge "net.minecraftforge:forge:${rootProject.minecraft_version}-${rootProject.forge_version}"
    modApi "me.shedaniel:architectury-forge:${rootProject.architectury_version}"
    modCompile "me.shedaniel.cloth:cloth-config-forge:${rootProject.cloth_config_version}"

    implementation(project(path: ":common")) {
        transitive = false
    }
    developmentForge(project(path: ":common")) {
        transitive = false
    }
    shadowCommon(project(path: ":common", configuration: "transformProductionForge")) {
        transitive = false
    }
}

processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}

shadowJar {
    exclude "fabric.mod.json"

    configurations = [project.configurations.shadowCommon]
    classifier "dev-shadow"
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    classifier "forge"
}

jar {
    classifier "dev"
}

java {
    withSourcesJar()
}

sourcesJar {
    def commonSources = project(":common").remapSourcesJar
    dependsOn commonSources
    from zipTree(commonSources.output)
}

publishing {
    publications {
        mavenForge(MavenPublication) {
            artifactId = rootProject.archives_base_name + "-" + project.name
            artifact(remapJar) {
                classifier null
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    repositories {
    }
}

if(System.getenv().get("unreal_curse_api_key")) {
    curseforge {
        apiKey = System.getenv().get("unreal_curse_api_key")
        project {
            id = project.property("curseforge_id")
            changelog = "TODO"
            changelogType = 'markdown'
            releaseType = project.property("type")
            addGameVersion minecraft_version
            addGameVersion 'Forge'
            mainArtifact(remapJar.archivePath)
            relations {
                requiredDependency 'architectury-forge'
            }
        }
    }
}




rootProject.tasks.getByName("curseforgePublish").dependsOn tasks.getByName("curseforge")
